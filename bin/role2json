#!/usr/bin/env ruby

require 'json'

class RubyToJson
  def initialize filename
    @data = {
      :json_class => "Chef::Role",
      :chef_type => "role"
    }
    
    proc = Proc.new {}
    eval(File.read(filename), proc.binding) 
  end

  def method_missing(m, *args, &block) 
    method_data = args.size == 1 ? args.first : args
    @data[m] = method_data
  end

  def get_data
    JSON.pretty_generate(@data)
  end
end

if ARGV.size == 0 then
  puts "USAGE: #{__FILE__} <path-to>/<role-name>.rb"
  puts "The chef_helper converts the role to json, and stores it back in the same folder as the original."
  exit 1
end

filename = ARGV[0]

unless File.exists?(filename) then
  puts "The role #{filename} does not exist. Are you in the right directory?"
  exit 1
end

filename_json = filename.gsub(".rb", ".json")
puts "Converting #{filename}"
r2j = RubyToJson.new filename
File.write(filename_json, r2j.get_data)
puts "        to #{filename_json}"
puts "Done. Thanks!"
